/* 
 * Textmagic API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = TextMagicClient.Client.SwaggerDateConverter;

namespace TextMagicClient.Model
{
    /// <summary>
    /// InviteSubaccountInputObject
    /// </summary>
    [DataContract]
    public partial class InviteSubaccountInputObject :  IEquatable<InviteSubaccountInputObject>, IValidatableObject
    {
        /// <summary>
        /// Type of account: *   **A** for Administrator sub-account; *   **U** for Regular User. 
        /// </summary>
        /// <value>Type of account: *   **A** for Administrator sub-account; *   **U** for Regular User. </value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum RoleEnum
        {
            
            /// <summary>
            /// Enum A for value: A
            /// </summary>
            [EnumMember(Value = "A")]
            A = 1,
            
            /// <summary>
            /// Enum U for value: U
            /// </summary>
            [EnumMember(Value = "U")]
            U = 2
        }

        /// <summary>
        /// Type of account: *   **A** for Administrator sub-account; *   **U** for Regular User. 
        /// </summary>
        /// <value>Type of account: *   **A** for Administrator sub-account; *   **U** for Regular User. </value>
        [DataMember(Name="role", EmitDefaultValue=false)]
        public RoleEnum? Role { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="InviteSubaccountInputObject" /> class.
        /// </summary>
        /// <param name="email">The invitation email will be sent to this email address..</param>
        /// <param name="role">Type of account: *   **A** for Administrator sub-account; *   **U** for Regular User. .</param>
        public InviteSubaccountInputObject(string email = default(string), RoleEnum? role = default(RoleEnum?))
        {
            this.Email = email;
            this.Role = role;
        }
        
        /// <summary>
        /// The invitation email will be sent to this email address.
        /// </summary>
        /// <value>The invitation email will be sent to this email address.</value>
        [DataMember(Name="email", EmitDefaultValue=false)]
        public string Email { get; set; }


        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class InviteSubaccountInputObject {\n");
            sb.Append("  Email: ").Append(Email).Append("\n");
            sb.Append("  Role: ").Append(Role).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as InviteSubaccountInputObject);
        }

        /// <summary>
        /// Returns true if InviteSubaccountInputObject instances are equal
        /// </summary>
        /// <param name="input">Instance of InviteSubaccountInputObject to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(InviteSubaccountInputObject input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Email == input.Email ||
                    (this.Email != null &&
                    this.Email.Equals(input.Email))
                ) && 
                (
                    this.Role == input.Role ||
                    (this.Role != null &&
                    this.Role.Equals(input.Role))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Email != null)
                    hashCode = hashCode * 59 + this.Email.GetHashCode();
                if (this.Role != null)
                    hashCode = hashCode * 59 + this.Role.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
